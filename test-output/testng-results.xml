<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="17" passed="16" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-20T21:22:45 IST" name="Default suite" finished-at="2025-04-20T21:23:04 IST" duration-ms="19697">
    <groups>
      <group name="Sanity">
        <method signature="echopostman.readdatafromjsonreaderfile()[pri:0, instance:userManagement.echopostman@6a192cfe]" name="readdatafromjsonreaderfile" class="userManagement.echopostman"/>
        <method signature="echopostman.validateResponseBodyGetBasicAuth()[pri:0, instance:userManagement.echopostman@6a192cfe]" name="validateResponseBodyGetBasicAuth" class="userManagement.echopostman"/>
        <method signature="echopostman.validateResponseBodyGetDigestAuth()[pri:0, instance:userManagement.echopostman@6a192cfe]" name="validateResponseBodyGetDigestAuth" class="userManagement.echopostman"/>
      </group> <!-- Sanity -->
      <group name="Regression">
        <method signature="echopostman.readdatafromjsonreaderfile()[pri:0, instance:userManagement.echopostman@6a192cfe]" name="readdatafromjsonreaderfile" class="userManagement.echopostman"/>
        <method signature="echopostman.validateResponseBodyGetDigestAuth()[pri:0, instance:userManagement.echopostman@6a192cfe]" name="validateResponseBodyGetDigestAuth" class="userManagement.echopostman"/>
      </group> <!-- Regression -->
      <group name="E2E">
        <method signature="echopostman.readdatafromjsonreaderfile()[pri:0, instance:userManagement.echopostman@6a192cfe]" name="readdatafromjsonreaderfile" class="userManagement.echopostman"/>
        <method signature="echopostman.validateResponseBodyGetBasicAuth()[pri:0, instance:userManagement.echopostman@6a192cfe]" name="validateResponseBodyGetBasicAuth" class="userManagement.echopostman"/>
        <method signature="echopostman.validateResponseBodyGetDigestAuth()[pri:0, instance:userManagement.echopostman@6a192cfe]" name="validateResponseBodyGetDigestAuth" class="userManagement.echopostman"/>
      </group> <!-- E2E -->
    </groups>
    <test started-at="2025-04-20T21:22:45 IST" name="Default test" finished-at="2025-04-20T21:23:04 IST" duration-ms="19697">
      <class name="userManagement.echopostman">
        <test-method signature="Test()[pri:0, instance:userManagement.echopostman@6a192cfe]" started-at="2025-04-20T21:22:45 IST" name="Test" finished-at="2025-04-20T21:22:45 IST" duration-ms="32" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test -->
        <test-method signature="Test1()[pri:0, instance:userManagement.echopostman@6a192cfe]" started-at="2025-04-20T21:22:45 IST" name="Test1" finished-at="2025-04-20T21:22:45 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method signature="Test2()[pri:0, instance:userManagement.echopostman@6a192cfe]" started-at="2025-04-20T21:22:45 IST" name="Test2" finished-at="2025-04-20T21:22:45 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method signature="readdatafromjsonreaderfile()[pri:0, instance:userManagement.echopostman@6a192cfe]" started-at="2025-04-20T21:22:45 IST" name="readdatafromjsonreaderfile" finished-at="2025-04-20T21:22:55 IST" duration-ms="10035" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readdatafromjsonreaderfile -->
        <test-method signature="validatePatchWithString()[pri:0, instance:userManagement.echopostman@6a192cfe]" started-at="2025-04-20T21:22:55 IST" name="validatePatchWithString" finished-at="2025-04-20T21:22:55 IST" duration-ms="649" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePatchWithString -->
        <test-method signature="validatePatchWithjsonfile()[pri:0, instance:userManagement.echopostman@6a192cfe]" started-at="2025-04-20T21:22:55 IST" name="validatePatchWithjsonfile" finished-at="2025-04-20T21:22:56 IST" duration-ms="573" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePatchWithjsonfile -->
        <test-method signature="validatePatchWithpojo()[pri:0, instance:userManagement.echopostman@6a192cfe]" started-at="2025-04-20T21:22:56 IST" name="validatePatchWithpojo" finished-at="2025-04-20T21:22:57 IST" duration-ms="826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePatchWithpojo -->
        <test-method signature="validatePatchWithpojodeserialization()[pri:0, instance:userManagement.echopostman@6a192cfe]" started-at="2025-04-20T21:22:57 IST" name="validatePatchWithpojodeserialization" finished-at="2025-04-20T21:22:57 IST" duration-ms="595" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "updatedAt" (class pojo.postrequestpojo), not marked as ignorable (6 known properties: "cityrequestbody", "name", "technology", "job", "marks", "languages"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 115] (through reference chain: pojo.postrequestpojo["updatedAt"])]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "updatedAt" (class pojo.postrequestpojo), not marked as ignorable (6 known properties: "cityrequestbody", "name", "technology", "job", "marks", "languages"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 115] (through reference chain: pojo.postrequestpojo["updatedAt"])
at io.restassured.internal.path.json.mapping.JsonPathJackson2ObjectDeserializer.deserialize(JsonPathJackson2ObjectDeserializer.java:30)
at io.restassured.path.json.mapping.JsonPathObjectDeserializer$deserialize.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.mapping.Jackson2Mapper.deserialize(Jackson2Mapper.groovy:58)
at io.restassured.mapper.ObjectMapper$deserialize$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.mapping.ObjectMapping.parseWithJackson2(ObjectMapping.groovy:254)
at io.restassured.internal.mapping.ObjectMapping$parseWithJackson2$1.callStatic(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:53)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:217)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callStatic(AbstractCallSite.java:240)
at io.restassured.internal.mapping.ObjectMapping.deserialize(ObjectMapping.groovy:56)
at io.restassured.internal.mapping.ObjectMapping$deserialize$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:45)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at io.restassured.internal.RestAssuredResponseOptionsGroovyImpl.as(RestAssuredResponseOptionsGroovyImpl.groovy:229)
at io.restassured.internal.RestAssuredResponseOptionsImpl.as(RestAssuredResponseOptionsImpl.java:169)
at userManagement.echopostman.validatePatchWithpojodeserialization(echopostman.java:263)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "updatedAt" (class pojo.postrequestpojo), not marked as ignorable (6 known properties: "cityrequestbody", "name", "technology", "job", "marks", "languages"])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 115] (through reference chain: pojo.postrequestpojo["updatedAt"])
at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1153)
at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2241)
at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1793)
at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1771)
at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:316)
at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4905)
at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3848)
at io.restassured.internal.path.json.mapping.JsonPathJackson2ObjectDeserializer.deserialize(JsonPathJackson2ObjectDeserializer.java:28)
... 47 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePatchWithpojodeserialization -->
        <test-method signature="validatePostWithString()[pri:0, instance:userManagement.echopostman@6a192cfe]" started-at="2025-04-20T21:22:57 IST" name="validatePostWithString" finished-at="2025-04-20T21:22:58 IST" duration-ms="450" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePostWithString -->
        <test-method signature="validatePostWithcomplexpojo()[pri:0, instance:userManagement.echopostman@6a192cfe]" started-at="2025-04-20T21:22:58 IST" name="validatePostWithcomplexpojo" finished-at="2025-04-20T21:22:58 IST" duration-ms="461" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePostWithcomplexpojo -->
        <test-method signature="validatePostWithjsonfile()[pri:0, instance:userManagement.echopostman@6a192cfe]" started-at="2025-04-20T21:22:58 IST" name="validatePostWithjsonfile" finished-at="2025-04-20T21:22:59 IST" duration-ms="649" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePostWithjsonfile -->
        <test-method signature="validatePostWithpojo()[pri:0, instance:userManagement.echopostman@6a192cfe]" started-at="2025-04-20T21:22:59 IST" name="validatePostWithpojo" finished-at="2025-04-20T21:22:59 IST" duration-ms="454" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePostWithpojo -->
        <test-method signature="validatePutWithString()[pri:0, instance:userManagement.echopostman@6a192cfe]" started-at="2025-04-20T21:22:59 IST" name="validatePutWithString" finished-at="2025-04-20T21:23:00 IST" duration-ms="463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePutWithString -->
        <test-method signature="validatePutWithjsonfile()[pri:0, instance:userManagement.echopostman@6a192cfe]" started-at="2025-04-20T21:23:00 IST" name="validatePutWithjsonfile" finished-at="2025-04-20T21:23:00 IST" duration-ms="462" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePutWithjsonfile -->
        <test-method signature="validatePutWithpojo()[pri:0, instance:userManagement.echopostman@6a192cfe]" started-at="2025-04-20T21:23:00 IST" name="validatePutWithpojo" finished-at="2025-04-20T21:23:01 IST" duration-ms="479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePutWithpojo -->
        <test-method signature="validateResponseBodyGetBasicAuth()[pri:0, instance:userManagement.echopostman@6a192cfe]" started-at="2025-04-20T21:23:01 IST" name="validateResponseBodyGetBasicAuth" finished-at="2025-04-20T21:23:03 IST" duration-ms="1748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResponseBodyGetBasicAuth -->
        <test-method signature="validateResponseBodyGetDigestAuth()[pri:0, instance:userManagement.echopostman@6a192cfe]" started-at="2025-04-20T21:23:03 IST" name="validateResponseBodyGetDigestAuth" finished-at="2025-04-20T21:23:04 IST" duration-ms="1743" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResponseBodyGetDigestAuth -->
      </class> <!-- userManagement.echopostman -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
